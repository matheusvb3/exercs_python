# -*- coding: utf-8 -*-
"""Exercícios Python - Listas.ipynb

Automatically generated by Colab.

# Percorrendo e imprimindo elementos
"""

# Crie uma lista com nomes de frutas e percorra-a usando um laço for, imprimindo cada fruta em uma linha separada.

frutas = ["maçã", "banana", "uva", "kiwi", "laranja", "abacaxi", "pêssego"]
for fruta in frutas:
    print(fruta)

# Crie uma lista com números e use um laço while para imprimir os números pares entre 1 e 10.

numeros = [0, 1, 4, 6, 2, 56, 3, 6, 23, 14, 24, 7, 23, 64, 34, 55, 23, 41, 12, 8]
i = 0
while i < len(numeros):
    if numeros[i] > 1 and numeros[i] < 10 and numeros[i] % 2 == 0:
        print(numeros[i])
    i += 1

"""# Manipulando listas


"""

# Crie uma lista de números e adicione um novo número ao final da lista. (append())

numeros = [0, 1, 4, 6, 2, 56, 3, 6, 23, 14, 24, 7, 23, 64, 34, 55, 23, 41, 12, 8]
numeros.append(15)
for numero in numeros:
    print(numero)

# Crie uma lista de nomes e remova o último nome da lista. ([-1])

nomes = ["Matheus", "Maria", "Luana", "Luísa", "Beatriz"]
nomes.pop(-1)
for nome in nomes:
    print(nome)

# Crie uma lista de cores e altere a cor no meio da lista. ([len(x)/2])

cores = ["azul", "amarelo", "laranja", "vermelho", "preto", "roxo", "verde", "rosa", "marrom"]
cores[int(len(cores) / 2)] = "cinza" # É necessário converter o índice para inteiro
for cor in cores:
    print(cor)

"""# Buscando elementos"""

# Crie uma lista de animais e use a função input() para pedir ao usuário um animal. Verifique se o animal está na lista e imprima uma mensagem informando se ele foi encontrado ou não. (elemento *in* lista)

animais = ["cachorro", "elefante", "macaco", "urso", "jacaré", "flamingo", "panda", "tucano", "gato"]
animal = input("Informe um animal: ")
if animal in animais:
    print("O animal está na lista")
else:
    print("O animal não está na lista")

# Crie uma lista de palavras e use a função len() para encontrar a palavra com o maior número de caracteres. (for)

palavras = ["cachorro", "azul", "Matheus", "fundação", "inconsistência", "maçã"]
maior_palavra = palavras[0]
for palavra in palavras:
    if len(palavra) > len(maior_palavra):
        maior_palavra = palavra
print(maior_palavra)

"""# Ordenando listas"""

# Crie uma lista de números e ordene-a em ordem crescente. (sorted())

numeros = [0, 1, 4, 6, 2, 56, 3, 6, 23, 14, 24, 7, 23, 64, 34, 55, 23, 41, 12, 8]
numeros.sort()
for numero in numeros:
    print(numero)

# Crie uma lista de nomes e ordene-a em ordem alfabética. (sorted())

nomes = ["Matheus", "Maria", "Luana", "Luísa", "Beatriz"]
nomes.sort()
for nome in nomes:
    print(nome)

"""# Estatísticas básicas"""

# Crie uma lista de notas e calcule a média e a soma das notas.

notas = [7, 5, 4, 6.4, 8, 10, 9, 8.7, 1.9, 3, 6, 7.2, 8, 1, 4.5]
i = acumulador = media = 0
while i < len(notas):
    acumulador += notas[i]
    i += 1
media = acumulador / len(notas)
print("A média das notas é {} e a soma é {}".format(media, acumulador))

# Crie uma lista de idades e encontre a idade mínima e máxima.

idades = [4, 6, 2, 56, 3, 6, 23, 14, 24, 7, 23, 64, 34, 55, 23, 41, 12, 8]
idade_minima = 100
idade_maxima = 0
for idade in idades:
    if idade < idade_minima:
        idade_minima = idade
    if idade > idade_maxima:
        idade_maxima = idade
print("Idade mínima: {}, idade máxima: {}".format(idade_minima, idade_maxima))

"""# Simulações simples"""

# Crie um programa que simula o lançamento de um dado. O programa deve pedir ao usuário quantas vezes ele deseja lançar o dado e imprimir o resultado de cada lançamento. (módulo random)
import random

quantidade_vezes = int(input("Informe a quantidade de vezes a lançar o dado: "))
for i in range(quantidade_vezes):
    print("O resultado é {}".format(random.randint(1, 6))) # O método randint retorna um inteiro aleatório entre uma faixa (incluindo os dois números nos extremos)

# Crie um programa que simula um jogo de adivinhação. O programa deve gerar um número aleatório entre 1 e 100 e pedir ao usuário para adivinhar o número. O programa deve dar dicas ao usuário, como se o número é maior ou menor que o palpite do usuário. (módulo random)
import random

num_premiado = random.randint(1, 100)
venceu = False
while not venceu:
    num_advinhado = int(input("Advinhe um número: "))
    if num_advinhado == num_premiado:
        venceu = True
    elif num_advinhado > num_premiado:
        print("O número correto é menor")
    else:
        print("O número correto é maior")
print("O número foi advinhado")

"""# Brincadeiras"""

# Crie um programa que lê uma palavra e a escreve ao contrário. (indexação reversa)

palavra = input("Informe uma palavra: ")
palavra = list(palavra) # É necessário converter para lista para poder usar o método copy
palavra_reversa = palavra.copy()
i = len(palavra) - 1
j = 0
while i >= 0:
    palavra_reversa[j] = palavra[i]
    i -= 1
    j += 1
palavra_reversa = ''.join(palavra_reversa) # O método join está unindo a lista de caracteres a uma string vazia, efetivamente criando uma string nova
print(palavra_reversa)

# Crie um programa que lê uma frase e a escreve com todas as letras maiúsculas. (uppercase())

palavra = input("Informe uma palavra: ")
palavra = list(palavra)
i = 0
while i < len(palavra):
    palavra[i] = palavra[i].upper()
    i += 1
palavra = ''.join(palavra)
print(palavra)
