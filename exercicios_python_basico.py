# -*- coding: utf-8 -*-
"""Exercícios Python.ipynb

Automatically generated by Colab.

# Exercícios: números
"""

x = int(input("Informe X: ")) # Função int() é usada para converter de str para int pois input() sempre retorna uma str
y = int(input("Informe y: "))
if x - y == 0:
    print("Ocorreu divisão por zero")
else:
    z = (x ** 2 + y ** 2) / (x - y) ** 2
    print ("Valor de Z: {}".format(z)) # Função format() é usada para trocar o placeholder {} na string pela variável numérica passada como argumento

acumulador = 0
for n in range(3, 333, 3):
    acumulador += n
print ("A soma é: {}".format(acumulador))

"""# Exercícios: estrutura de repetição"""

salario = int(input("Informe o salário do funcionário: R$"))
if salario < 0:
    print ("O salário informado não é válido")
else:
    novo_salario = salario * 1.35
    print("O novo salário é R${}".format(novo_salario))

notas = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # Cria uma lista com dez notas 0, já que estes valores serão sobrescritos depois

indice = 0
while indice < len(notas):
    notas[indice] = int(input("Informe a nota {}: ".format(indice + 1)))
    indice += 1 # Como Pyhton não possui loops for com autoincremento, é necessário incrementar o índice no fim do loop

acumulador = 0
for n in notas:
    acumulador += n
acumulador /= 10
print("A média é: {}".format(acumulador))

numero_escolhido = int(input("Informe um número de 1 a 10: "))
if numero_escolhido < 1 or numero_escolhido > 10:
    print("O número informado não é válido")
else:
    for n in range(1, 11):
        print("{} x {} = {}".format(numero_escolhido, n, numero_escolhido * n))

"""# Exercícios: strings"""

string = "Um elefante incomoda muita gente"
# Conforme demonstrado abaixo, a porção "elefante incomoda" corresponde à faixa de índices 3 a 20 (não incluso) da string
print(string[3:20])

string = input("Informe uma string: ")
string = string.replace(" ", "") # Retira os espaços em branco
string = string.upper() # Deixa a string em uppercase
print ("String modificada: " + string)
